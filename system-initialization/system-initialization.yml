---
- name: System Initialization for debian
  hosts: all
  gather_facts: False
  become: True
  vars:
    packages:
      - python3-apt 
      - apt-transport-https 
      - ca-certificates
      - systemd-timesyncd
      - vim          
      - bash-completion
      - git
      - curl
      - wget
      - iptables
      - iptables-persistent 

  tasks:
    - name: set apt source
      ansible.builtin.copy:
        src: files/apt.sources.list
        dest: /etc/apt/sources.list
        owner: root
        group: root
        mode: 0644
        backup: yes
      when: "'production-inventory.yml' not in inventory_file"

    - name: Upgrade System
      ansible.builtin.apt:
        upgrade: full
        update_cache: true
      ignore_errors: yes
      notify: reboot

    - name: Install commonly used software
      ansible.builtin.apt:
        update_cache: False
        pkg: "{{ packages }}"

    - name: Clean no longer required packages
      ansible.builtin.apt:
        autoremove: yes
        autoclean: yes

    - name: ensure dbus is running
      ansible.builtin.systemd:
        name: dbus
        state: started
        enabled: true


    # Be aware that inconsistencies between the hostname and hosts can cause Ansible SSH connection timeouts.
    - name: Set hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        search_string: "127.0.1.1"
        line: "127.0.1.1 {{ hostname }} debian"
        state: present
      tags: hosts

    - name: Set Hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
        use: debian

    - name: Set timezone
      community.general.timezone:
        name: "{{ timezone }}"

    - block:
      - name: get ntp servers address
        ansible.builtin.set_fact:
          ntp_server: "{{ ntp_servers[0] }}"
          fallback_ntp_servers: "{{ ntp_servers[1:] | join(' ') }}"
          
      - name: Set ntp server
        ansible.builtin.lineinfile:
          path: /etc/systemd/timesyncd.conf
          regexp: '^#?NTP'
          line: "NTP={{ ntp_server }}"
          state: present
          # backup: yes

      - name: Set ntp backup server
        ansible.builtin.lineinfile:
          path: /etc/systemd/timesyncd.conf
          regexp: '^#?FallbackNTP'
          line: "FallbackNTP= {{ fallback_ntp_servers }}"
          state: present
      notify:
        - restart systemd-timesyncd

    - name: Set locale
      ansible.builtin.locale_gen:
        name: "{{ locale }}"
        state: present

    - block:
      - name: Configure sshd to disable root login
        ansible.builtin.lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^#?PermitRootLogin'
          line: 'PermitRootLogin no'
          state: present
          # backup: yes
        notify:
          - restart sshd
      
      - name: Configure sshd to change port
        ansible.builtin.lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^#?Port'
          line: "Port {{ ssh_port }}"
          state: present
          # backup: yes
        notify:
          - restart sshd

      - name: Configure sshd to disable use DNS
        ansible.builtin.lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^#?UseDNS'
          line: 'UseDNS no'
          state: present
          # backup: yes
        notify:
          - restart sshd

      - name: Configure sshd to allow demo to login only.
        ansible.builtin.lineinfile:
          path: /etc/ssh/sshd_config
          line: "AllowUsers {{ ansible_user }}"
        notify:
          - restart sshd

      - name: loading iptables rules 
    #   ansible.builtin.script: files/iptables-webserver.sh -p "{{ ssh_port }}"
        ansible.builtin.template:
          src: templates/rules.v4.j2
          dest: /etc/iptables/rules.v4
        notify: "reload iptables"

  handlers:
    - name: restart sshd
      ansible.builtin.systemd:
        name: sshd
        state: restarted
        enabled: true

    - name: restart systemd-timesyncd
      ansible.builtin.systemd:
        name: systemd-timesyncd
        state: restarted
        enabled: true

    - name: reload iptables
      ansible.builtin.systemd:
        name: netfilter-persistent
        state: restarted
        enabled: true
    
    - name: reboot
      ansible.builtin.reboot:
        reboot_command: reboot

      



